{% extends 'socialNetwork/base.html.twig' %}
{% block body %}
  <div class="container main-container">
    <!-- Timeline
    ================================================= -->
    <div class="timeline">
      {% include('socialNetwork/inc/timeline-footballer.html.twig') %}
      <div id="page-contents">
        <div class="row" id="page-contents-child">
            <!--Edit Profile Menu-->
            {% include('socialNetwork/inc/edit-menu-profil.html.twig') %}
          <div class="block-profil col-sm-12">
            <div class="edit-profile-container">
              <div class="block-title">
                <h4 class="grey">Informations personnelles</h4>
                {% for message in app.flashes('success') %}
                  <div class="alert alert-success">
                    {{ message }}
                  </div>
                {% endfor %}
                {% for message in app.flashes('error') %}
                  <div class="alert alert-danger">
                    {{ message }}
                  </div>
                {% endfor %}
              </div>
              <div class="edit-block">
                {{ form_start(form, {'attr': {'class': 'register-form', 'id':'register-form'}}) }}
                <div class="row">
                  <label>Nom</label>
                  {{ form_row(form.name, {'label': false,'attr': {'placeholder': 'Nom', 'class': ''}}) }}

                  <label>Prénom</label>
                  {{ form_row(form.firstName, {'label': false,'attr': {'placeholder': 'Prénom', 'class': ''}}) }}

                  <label>Date de naissance</label>
                  {{ form_row(form.dateOfBirth, {'label': false,'attr': {'placeholder': 'Date de naissance', 'class': ''}}) }}

                  <label>Téléphone</label>
                  {{ form_row(form.account, {'label': false,'attr': {'placeholder': 'Téléphone', 'class': ''}}) }}

                  <label>Code postal et Ville</label>
                  {{ form_row(form.city, {'label': false, 'id': 'autocomplete', 'attr': {'placeholder': 'Code postal et Ville', 'class': ''}}) }}

                  {{ form_row(form.longitude, {'label': false}) }}

                  {{ form_row(form.latitude, {'label': false}) }}

                  <label>Sexe</label>
                  {{ form_row(form.sexe, {'label': false,'attr': {'placeholder': 'Sexe', 'class': ''}}) }}

                  <button class="btn btn-primary">Enregistrer</button>
                  {{ form_end(form) }}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}
{% block javascripts %}
  <script>
    let autocomplete;
    let autocomplete2;

    function initAutocomplete() {
      // Create the autocomplete object, restricting the search predictions to
      // geographical location types.
      autocomplete = new google.maps.places.Autocomplete(
              document.getElementById("autocomplete"),
              {
                types: ['(regions)'],
                componentRestrictions: {country: "fr"}
              }
      );

      autocomplete.addListener("place_changed", fillInAddress);

      autocomplete2 = new google.maps.places.Autocomplete(
              document.getElementById("autocomplete2"),
              {
                types: ['(regions)'],
                componentRestrictions: {country: "fr"}
              }
      );

      autocomplete2.addListener("place_changed", fillInAddress);
    }

    function fillInAddress() {
      // Get the place details from the autocomplete object.
      const place = autocomplete.getPlace();
      const place2 = autocomplete2.getPlace();

      if(typeof place !== 'undefined'){
        if (!place.geometry) {
          window.alert("Veuillez sélectionner une autre adresse");
          return;
        }else{
          $('#user_longitude').val(place.geometry.location.lng());
          $('#user_latitude').val(place.geometry.location.lat());
        }
      }

      if(typeof place2 !== 'undefined'){
        if (!place2.geometry) {
          window.alert("Veuillez sélectionner une autre adresse");
          return;
        } else {
          $('#user_longitude2').val(place2.geometry.location.lng());
          $('#user_latitude2').val(place2.geometry.location.lat());
        }
      }
    }
  </script>
{% endblock %}
